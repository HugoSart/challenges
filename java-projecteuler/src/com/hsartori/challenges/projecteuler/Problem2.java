package com.hsartori.challenges.projecteuler;

import com.hsartori.challenges.projecteuler.utilities.Problem;

/**
 * <strong>Even Fibonacci numbers</strong>
 * <br><br>
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * <br><br>
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * <br><br>
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */
public final class Problem2 extends Problem {

    @Override
    protected Object solve() {
        long sum = 0;
        long n1 = -1, n2 = -1;
        for (long i = 0; i < Long.MAX_VALUE; i++) {

            // Update n1 and n2
            if (i == 0) {
                n1 = 1;
                n2 = -1;
            } else if (i == 1) {
                n1 = 2;
                n2 = 1;
            } else {
                long aux = n1;
                n1 += n2;
                n2 = aux;
            }

            // Break case
            if (n1 > 4_000_000)
                break;

            // Sum even values
            if (n1 % 2 == 0)
                sum += n1;

        }
        return sum;
    }

}

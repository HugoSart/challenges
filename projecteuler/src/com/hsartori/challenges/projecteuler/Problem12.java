package com.hsartori.challenges.projecteuler;

import com.hsartori.challenges.projecteuler.utilities.Problem;

import java.util.SortedSet;
import java.util.stream.Collectors;

import static com.hsartori.challenges.commons.math.MathUtils.divisors;

/**
 * <strong>Highly divisible triangular number</strong>
 * <br><br>
 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 * <br><br>
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 * <br><br>
 * Let us list the factors of the first seven triangle numbers:
 * <br><br>
 *  1: 1
 *  3: 1,3
 *  6: 1,2,3,6
 * 10: 1,2,5,10
 * 15: 1,3,5,15
 * 21: 1,3,7,21
 * 28: 1,2,4,7,14,28
 * We can see that 28 is the first triangle number to have over five divisors.
 * <br><br>
 * What is the value of the first triangle number to have over five hundred divisors?
 */
public final class Problem12 extends Problem {

    @Override
    protected Object solve() {
        for (long i = 1; i < Long.MAX_VALUE; i++) {
            final long val = triangle(i);
            final int divisors = divisors(val).size();
            if (divisors >= 500)
                return val;
        }
        return null;
    }

    private long triangle(long n) {
        return (n * n + n) / 2;
    }

}
